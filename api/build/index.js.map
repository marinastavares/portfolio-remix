{
  "version": 3,
  "sources": ["<stdin>", "../../node_modules/@remix-run/dev/compiler/shims/react.ts", "../../app/entry.server.tsx", "route-module:/Users/marinatavares/portifolia-remix/app/root.tsx", "../../app/assets/logo.tsx", "../../app/assets/twitter.tsx", "../../app/assets/github.tsx", "../../app/assets/linkedin.tsx", "route-module:/Users/marinatavares/portifolia-remix/app/routes/xp/index.tsx", "route-module:/Users/marinatavares/portifolia-remix/app/routes/index.tsx"],
  "sourcesContent": ["\nimport * as entryServer from \"/Users/marinatavares/portifolia-remix/app/entry.server.tsx\";\nimport * as route0 from \"/Users/marinatavares/portifolia-remix/app/root.tsx\";\nimport * as route1 from \"/Users/marinatavares/portifolia-remix/app/routes/xp/index.tsx\";\nimport * as route2 from \"/Users/marinatavares/portifolia-remix/app/routes/index.tsx\";\nexport { default as assets } from \"./assets.json\";\nexport const entry = { module: entryServer };\nexport const routes = {\n  \"root\": {\n    id: \"root\",\n    parentId: undefined,\n    path: \"\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route0\n  },\n  \"routes/xp/index\": {\n    id: \"routes/xp/index\",\n    parentId: \"root\",\n    path: \"xp\",\n    index: true,\n    caseSensitive: undefined,\n    module: route1\n  },\n  \"routes/index\": {\n    id: \"routes/index\",\n    parentId: \"root\",\n    path: undefined,\n    index: true,\n    caseSensitive: undefined,\n    module: route2\n  }\n};", "import * as React from \"react\";\nexport { React };\n", "import { renderToString } from \"react-dom/server\";\nimport { RemixServer } from \"remix\";\nimport type { EntryContext } from \"remix\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders\n  });\n}\n", "/* eslint-disable react/react-in-jsx-scope */\nimport {\n  Link,\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useCatch\n} from \"remix\";\nimport type { LinksFunction } from \"remix\";\n\nimport globalStylesUrl from \"~/styles/global.css\";\nimport Logo from \"~/assets/logo\";\nimport Twitter from \"~/assets/twitter\";\nimport Github from \"~/assets/github\";\nimport Linkedin from \"~/assets/linkedin\";\n\n// https://remix.run/api/app#links\nexport const links: LinksFunction = () => {\n  return [\n    { rel: \"stylesheet\", href: globalStylesUrl },\n    { rel: \"stylesheet\", href: 'https://fonts.googleapis.com/css?family=Righteous' },\n  ];\n};\n\n// https://remix.run/api/conventions#default-export\n// https://remix.run/api/conventions#route-filenames\nexport default function App() {\n  return (\n    <Document>\n      <Layout>\n        <Outlet />\n      </Layout>\n    </Document>\n  );\n}\n\n// https://remix.run/docs/en/v1/api/conventions#errorboundary\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n  return (\n    <Document title=\"Error!\">\n      <Layout>\n        <div>\n          <h1>There was an error</h1>\n          <p>{error.message}</p>\n          <hr />\n          <p>\n            Hey, developer, you should replace this with what you want your\n            users to see.\n          </p>\n        </div>\n      </Layout>\n    </Document>\n  );\n}\n\n// https://remix.run/docs/en/v1/api/conventions#catchboundary\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  let message;\n  switch (caught.status) {\n    case 401:\n      message = (\n        <p>\n          Oops! Looks like you tried to visit a page that you do not have access\n          to.\n        </p>\n      );\n      break;\n    case 404:\n      message = (\n        <p>Oops! Looks like you tried to visit a page that does not exist.</p>\n      );\n      break;\n\n    default:\n      throw new Error(caught.data || caught.statusText);\n  }\n\n  return (\n    <Document title={`${caught.status} ${caught.statusText}`}>\n      <Layout>\n        <h1>\n          {caught.status}: {caught.statusText}\n        </h1>\n        {message}\n      </Layout>\n    </Document>\n  );\n}\n\nfunction Document({\n  children,\n  title\n}: {\n  children: React.ReactNode;\n  title?: string;\n}) {\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        {title ? <title>{title}</title> : null}\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        {children}\n        <ScrollRestoration />\n        <Scripts />\n        {process.env.NODE_ENV === \"development\" && <LiveReload />}\n      </body>\n    </html>\n  );\n}\n\nfunction Layout({ children }: { children: React.ReactNode }) {\n  return (\n    <div className=\"remix-app\">\n      <header className=\"header\">\n          <Link to=\"/\" title=\"Marina's logo\" className=\"header-logo\">\n            <Logo />\n          </Link>\n          <nav aria-label=\"Main navigation\" className=\"header-nav\">\n            <ul>\n              <li>\n                <Link className=\"header-link\" to=\"/\">Home</Link>\n              </li>\n              <li>\n              <Link className=\"header-link\" to=\"/xp\">XP</Link>\n              </li>\n              {/* <li>\n              <Link className=\"header-link\" to=\"/\">Contact me</Link>\n              </li> */}\n            </ul>\n          </nav>\n      </header>\n        <main>{children}</main>\n      <footer className=\"footer\">\n        <a aria-label=\"Link to github account\" target=\"_blank\" href=\"https://www.github.com/marinastavares\" aria-label=\"Github link\" rel=\"noreferrer\">\n            <Github />\n        </a>\n        <a aria-label=\"Link to twitter account\" target=\"_blank\" href=\"https://www.twitter.com/marinastavares\" aria-label=\"Twitter link\" rel=\"noreferrer\">\n            <Twitter />\n        </a>\n        <a aria-label=\"Link to linkedin account\" target=\"_blank\" href=\"https://www.linkedin.com/in/marinastavares\" aria-label=\"Twitter link\" rel=\"noreferrer\">\n            <Linkedin />\n        </a>\n      </footer>\n    </div>\n  );\n}\n", "const Logo = () => (<svg width=\"92\" height=\"45\" viewBox=\"0 0 92 45\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M19.7292 27V27.7656H20.4948V27H19.7292ZM16.0687 27H15.3031V27.7656H16.0687V27ZM15.9207 17.1354L15.2098 17.4197L15.2146 17.4318L15.2199 17.4437L15.9207 17.1354ZM14.9382 16.153L14.6299 16.8537L14.6418 16.859L14.6539 16.8638L14.9382 16.153ZM13.5117 16.153L13.8062 16.8597L13.8131 16.8568L13.82 16.8537L13.5117 16.153ZM12.933 16.5432L12.3916 16.0019L12.3843 16.0092L12.3772 16.0167L12.933 16.5432ZM12.5427 17.1354L11.842 16.827L11.8367 16.839L11.8319 16.851L12.5427 17.1354ZM12.4082 27V27.7656H13.1738V27H12.4082ZM8.73416 27H7.96855V27.7656H8.73416V27ZM8.58612 17.1354L7.87528 17.4197L7.88011 17.4318L7.88535 17.4437L8.58612 17.1354ZM7.6037 16.153L7.29536 16.8537L7.30727 16.859L7.31936 16.8638L7.6037 16.153ZM6.17716 16.153L6.47163 16.8597L6.47859 16.8568L6.4855 16.8537L6.17716 16.153ZM5.59847 16.5432L5.05711 16.0019L5.0498 16.0092L5.04268 16.0167L5.59847 16.5432ZM5.2082 17.1354L4.50743 16.827L4.50219 16.839L4.49735 16.851L5.2082 17.1354ZM5.07362 27V27.7656H5.83922V27H5.07362ZM1.39962 27H0.634015V27.7656H1.39962V27ZM1.39962 12.5866V11.821H0.634015V12.5866H1.39962ZM2.28784 12.5866L2.85622 12.0737L2.62819 11.821H2.28784V12.5866ZM3.28372 13.6902L2.71534 14.2031L3.21099 14.7523L3.77687 14.2758L3.28372 13.6902ZM4.96595 12.6943L5.23939 13.4094L5.24494 13.4072L4.96595 12.6943ZM8.85528 12.7077L8.5744 13.42L8.57779 13.4213L8.85528 12.7077ZM10.551 14.0132L9.94805 14.485L10.57 15.2797L11.1678 14.4667L10.551 14.0132ZM12.2197 12.7077L11.9253 12.001L11.9182 12.004L12.2197 12.7077ZM13.2156 12.4251L13.335 13.1814L13.3447 13.1798L13.3543 13.1781L13.2156 12.4251ZM16.3648 12.7616L16.0609 13.4643L16.0643 13.4658L16.3648 12.7616ZM18.1143 13.9459L17.568 14.4824L17.5778 14.4921L18.1143 13.9459ZM19.7292 26.2344H16.0687V27.7656H19.7292V26.2344ZM16.8343 27V17.8486H15.3031V27H16.8343ZM16.8343 17.8486C16.8343 17.494 16.764 17.151 16.6214 16.827L15.2199 17.4437C15.2747 17.5684 15.3031 17.7009 15.3031 17.8486H16.8343ZM16.6315 16.851C16.5034 16.5307 16.3157 16.2458 16.0717 16.0019L14.989 17.0846C15.086 17.1816 15.1585 17.2915 15.2098 17.4197L16.6315 16.851ZM16.0717 16.0019C15.8278 15.7579 15.5429 15.5703 15.2226 15.4421L14.6539 16.8638C14.7821 16.9151 14.892 16.9876 14.989 17.0846L16.0717 16.0019ZM15.2466 15.4522C14.9226 15.3097 14.5796 15.2393 14.225 15.2393V16.7705C14.3728 16.7705 14.5053 16.7989 14.6299 16.8537L15.2466 15.4522ZM14.225 15.2393C13.8703 15.2393 13.5273 15.3097 13.2034 15.4522L13.82 16.8537C13.9447 16.7989 14.0772 16.7705 14.225 16.7705V15.2393ZM13.2172 15.4462C12.9065 15.5757 12.6304 15.7631 12.3916 16.0019L13.4744 17.0846C13.5765 16.9824 13.6862 16.9096 13.8062 16.8597L13.2172 15.4462ZM12.3772 16.0167C12.1526 16.2538 11.9745 16.5258 11.842 16.827L13.2435 17.4437C13.3083 17.2964 13.3904 17.1736 13.4888 17.0698L12.3772 16.0167ZM11.8319 16.851C11.7046 17.1694 11.6426 17.504 11.6426 17.8486H13.1738C13.1738 17.6909 13.2015 17.55 13.2536 17.4197L11.8319 16.851ZM11.6426 17.8486V27H13.1738V17.8486H11.6426ZM12.4082 26.2344H8.73416V27.7656H12.4082V26.2344ZM9.49976 27V17.8486H7.96855V27H9.49976ZM9.49976 17.8486C9.49976 17.494 9.42943 17.151 9.28689 16.827L7.88535 17.4437C7.9402 17.5684 7.96855 17.7009 7.96855 17.8486H9.49976ZM9.29697 16.851C9.16882 16.5307 8.98114 16.2458 8.73721 16.0019L7.65448 17.0846C7.75147 17.1816 7.82398 17.2915 7.87528 17.4197L9.29697 16.851ZM8.73721 16.0019C8.49327 15.7579 8.20839 15.5703 7.88803 15.4421L7.31936 16.8638C7.4476 16.9151 7.55749 16.9876 7.65448 17.0846L8.73721 16.0019ZM7.91203 15.4522C7.58809 15.3097 7.24506 15.2393 6.89043 15.2393V16.7705C7.03822 16.7705 7.17071 16.7989 7.29536 16.8537L7.91203 15.4522ZM6.89043 15.2393C6.53579 15.2393 6.19277 15.3097 5.86882 15.4522L6.4855 16.8537C6.61015 16.7989 6.74264 16.7705 6.89043 16.7705V15.2393ZM5.8827 15.4462C5.57196 15.5757 5.29587 15.7631 5.05711 16.0019L6.13984 17.0846C6.24201 16.9824 6.35171 16.9096 6.47163 16.8597L5.8827 15.4462ZM5.04268 16.0167C4.81807 16.2538 4.63999 16.5258 4.50743 16.827L5.90896 17.4437C5.97379 17.2964 6.05588 17.1736 6.15427 17.0698L5.04268 16.0167ZM4.49735 16.851C4.37002 17.1694 4.30801 17.504 4.30801 17.8486H5.83922C5.83922 17.6909 5.86693 17.55 5.91904 17.4197L4.49735 16.851ZM4.30801 17.8486V27H5.83922V17.8486H4.30801ZM5.07362 26.2344H1.39962V27.7656H5.07362V26.2344ZM2.16522 27V12.5866H0.634015V27H2.16522ZM1.39962 13.3522H2.28784V11.821H1.39962V13.3522ZM1.71946 13.0995L2.71534 14.2031L3.8521 13.1772L2.85622 12.0737L1.71946 13.0995ZM3.77687 14.2758C4.22435 13.899 4.71115 13.6114 5.23938 13.4094L4.69253 11.9792C4.00058 12.2437 3.36589 12.6201 2.79057 13.1045L3.77687 14.2758ZM5.24494 13.4072C5.77522 13.1997 6.3221 13.0965 6.89043 13.0965V11.5653C6.13092 11.5653 5.39481 11.7043 4.68697 11.9813L5.24494 13.4072ZM6.89043 13.0965C7.46546 13.0965 8.02523 13.2034 8.5744 13.42L9.13615 11.9955C8.41132 11.7097 7.66119 11.5653 6.89043 11.5653V13.0965ZM8.57779 13.4213C9.07905 13.6162 9.53675 13.9594 9.94805 14.485L11.1539 13.5413C10.5962 12.8287 9.92346 12.3017 9.13277 11.9942L8.57779 13.4213ZM11.1678 14.4667C11.3501 14.2187 11.5535 14.013 11.7774 13.8451L10.8587 12.6201C10.5084 12.8828 10.2004 13.1975 9.93416 13.5596L11.1678 14.4667ZM11.7774 13.8451C12.0182 13.6645 12.2661 13.5208 12.5213 13.4114L11.9182 12.004C11.5454 12.1638 11.1921 12.3701 10.8587 12.6201L11.7774 13.8451ZM12.5142 13.4145C12.7818 13.303 13.055 13.2256 13.335 13.1814L13.0962 11.6689C12.6943 11.7323 12.3037 11.8434 11.9253 12.001L12.5142 13.4145ZM13.3543 13.1781C13.6515 13.1233 13.9415 13.0965 14.225 13.0965V11.5653C13.8445 11.5653 13.4616 11.6013 13.0769 11.6722L13.3543 13.1781ZM14.225 13.0965C14.8888 13.0965 15.4981 13.2209 16.0609 13.4643L16.6686 12.0589C15.9036 11.728 15.0863 11.5653 14.225 11.5653V13.0965ZM16.0643 13.4658C16.6488 13.7151 17.1475 14.0541 17.5681 14.4823L18.6605 13.4094C18.0942 12.8328 17.4266 12.3822 16.6652 12.0574L16.0643 13.4658ZM17.5778 14.4921C18.006 14.9126 18.345 15.4114 18.5944 15.9958L20.0028 15.3949C19.6779 14.6336 19.2274 13.966 18.6508 13.3996L17.5778 14.4921ZM18.5944 15.9958C18.8393 16.5697 18.9636 17.1848 18.9636 17.8486H20.4948C20.4948 16.9872 20.3321 16.1668 20.0028 15.3949L18.5944 15.9958ZM18.9636 17.8486V27H20.4948V17.8486H18.9636ZM36.3766 27V27.7656H37.1422V27H36.3766ZM35.4884 27L34.8674 27.4478L35.0966 27.7656H35.4884V27ZM34.0619 25.0217L34.6829 24.5739L34.1846 23.8829L33.5505 24.4519L34.0619 25.0217ZM32.9449 25.9099L33.3829 26.5378L33.3858 26.5358L32.9449 25.9099ZM31.7202 26.6232L32.0392 27.3193L32.051 27.3136L31.7202 26.6232ZM30.3879 27.0942L30.1988 26.3523L30.1952 26.3532L30.3879 27.0942ZM26.1486 26.7578L25.8743 27.4725L25.8767 27.4734L26.1486 26.7578ZM23.807 25.2774L23.2693 25.8225L23.2768 25.8297L23.807 25.2774ZM22.2324 16.5836L22.9399 16.8761L22.9409 16.8738L22.2324 16.5836ZM23.807 14.1612L23.2656 13.6198L23.262 13.6235L23.807 14.1612ZM26.1486 12.6001L26.4416 13.3074L26.4451 13.306L26.1486 12.6001ZM32.9583 13.421L32.5106 14.0421L32.5174 14.0469L32.9583 13.421ZM34.0619 14.3227L33.5353 14.8785L34.1272 15.4392L34.6496 14.8133L34.0619 14.3227ZM35.4884 12.6135V11.8479H35.1302L34.9006 12.123L35.4884 12.6135ZM36.3766 12.6135H37.1422V11.8479H36.3766V12.6135ZM32.3796 18.212L31.6679 18.494L31.6711 18.5022L31.6745 18.5103L32.3796 18.212ZM31.5991 16.9604L31.0307 17.4734L31.037 17.4803L31.5991 16.9604ZM30.4282 16.0857L30.0803 16.7676L30.0886 16.7719L30.0969 16.7759L30.4282 16.0857ZM27.5886 16.0049L27.3167 15.2892L27.3118 15.2911L27.5886 16.0049ZM26.4313 16.7586L25.8898 16.2171L25.8825 16.2247L26.4313 16.7586ZM25.6642 17.9967L26.3777 18.2742L26.3794 18.2698L25.6642 17.9967ZM25.6642 21.3477L24.9489 21.6208L24.9506 21.6252L25.6642 21.3477ZM26.4313 22.5724L25.8825 23.1063L25.8899 23.1137L26.4313 22.5724ZM27.5886 23.326L27.3118 24.0398L27.3167 24.0417L27.5886 23.326ZM30.4282 23.2587L30.765 23.9463L30.7706 23.9435L30.4282 23.2587ZM31.5991 22.384L32.1611 22.9039L32.1675 22.8969L31.5991 22.384ZM32.3796 21.1324L31.6725 20.8388L31.6697 20.8457L32.3796 21.1324ZM36.3766 26.2344H35.4884V27.7656H36.3766V26.2344ZM36.1094 26.5522L34.6829 24.5739L33.4409 25.4695L34.8674 27.4478L36.1094 26.5522ZM33.5505 24.4519C33.2236 24.7453 32.8748 25.0227 32.5039 25.284L33.3858 26.5358C33.8045 26.2408 34.2004 25.9261 34.5732 25.5915L33.5505 24.4519ZM32.5068 25.282C32.1555 25.5271 31.7832 25.744 31.3894 25.9327L32.051 27.3136C32.5185 27.0896 32.9626 26.831 33.3829 26.5378L32.5068 25.282ZM31.4012 25.9272C31.0122 26.1055 30.6116 26.2471 30.1988 26.3523L30.577 27.8361C31.0793 27.708 31.5668 27.5357 32.0392 27.3192L31.4012 25.9272ZM30.1952 26.3532C29.8099 26.4534 29.4171 26.5036 29.0152 26.5036V28.0348C29.5463 28.0348 30.0686 27.9683 30.5805 27.8352L30.1952 26.3532ZM29.0152 26.5036C28.089 26.5036 27.2261 26.3482 26.4206 26.0421L25.8767 27.4734C26.8656 27.8492 27.9137 28.0348 29.0152 28.0348V26.5036ZM26.423 26.043C25.6281 25.7379 24.935 25.299 24.3372 24.7251L23.2768 25.8297C24.0248 26.5478 24.8928 27.0958 25.8743 27.4725L26.423 26.043ZM24.3446 24.7324C23.7608 24.1564 23.2911 23.447 22.9409 22.5917L21.5239 23.172C21.9452 24.2009 22.5253 25.0885 23.2693 25.8224L24.3446 24.7324ZM22.9409 22.5917C22.599 21.7569 22.4193 20.7859 22.4193 19.6655H20.8881C20.8881 20.9495 21.0942 22.1228 21.5239 23.172L22.9409 22.5917ZM22.4193 19.6655C22.4193 18.6332 22.5965 17.7067 22.9399 16.8761L21.5249 16.2911C21.0967 17.3267 20.8881 18.4547 20.8881 19.6655H22.4193ZM22.9409 16.8738C23.2918 16.0169 23.7634 15.2954 24.352 14.6989L23.262 13.6235C22.5227 14.3728 21.9446 15.2662 21.5239 16.2935L22.9409 16.8738ZM24.3483 14.7026C24.9494 14.1015 25.6453 13.6372 26.4416 13.3074L25.8557 11.8927C24.8756 12.2987 24.0104 12.8751 23.2656 13.6198L24.3483 14.7026ZM26.4451 13.306C27.2445 12.9702 28.0988 12.8005 29.0152 12.8005V11.2692C27.9039 11.2692 26.8472 11.4763 25.8522 11.8942L26.4451 13.306ZM29.0152 12.8005C29.4172 12.8005 29.8157 12.8506 30.2122 12.9517L30.5904 11.4679C30.0718 11.3357 29.5463 11.2692 29.0152 11.2692V12.8005ZM30.2122 12.9517C30.6204 13.0557 31.0171 13.1999 31.4028 13.3847L32.0645 12.0039C31.5889 11.776 31.0974 11.5971 30.5904 11.4679L30.2122 12.9517ZM31.4028 13.3847C31.7927 13.5715 32.1618 13.7906 32.5106 14.042L33.406 12.8C32.9833 12.4952 32.5359 12.2297 32.0645 12.0039L31.4028 13.3847ZM32.5174 14.0469C32.8828 14.3043 33.2219 14.5816 33.5353 14.8785L34.5884 13.7669C34.2199 13.4178 33.8234 13.0939 33.3993 12.7951L32.5174 14.0469ZM34.6496 14.8133L36.0762 13.1041L34.9006 12.123L33.4741 13.8321L34.6496 14.8133ZM35.4884 13.3791H36.3766V11.8479H35.4884V13.3791ZM35.611 12.6135V27H37.1422V12.6135H35.611ZM33.4413 19.6655C33.4413 19.0597 33.3217 18.4738 33.0847 17.9137L31.6745 18.5103C31.8323 18.8833 31.9101 19.2664 31.9101 19.6655H33.4413ZM33.0914 17.93C32.8698 17.3708 32.5602 16.872 32.1611 16.4406L31.037 17.4803C31.3019 17.7666 31.5126 18.1022 31.6679 18.494L33.0914 17.93ZM32.1675 16.4475C31.7685 16.0054 31.2976 15.6537 30.7595 15.3955L30.0969 16.7759C30.4561 16.9483 30.7658 17.1798 31.0307 17.4734L32.1675 16.4475ZM30.7762 15.4037C30.2268 15.1234 29.6363 14.9836 29.0152 14.9836V16.5148C29.3989 16.5148 29.7504 16.5993 30.0803 16.7676L30.7762 15.4037ZM29.0152 14.9836C28.4242 14.9836 27.8562 15.0842 27.3167 15.2892L27.8606 16.7206C28.2183 16.5847 28.6012 16.5148 29.0152 16.5148V14.9836ZM27.3118 15.2911C26.7735 15.4999 26.2974 15.8096 25.8899 16.2172L26.9726 17.2999C27.229 17.0436 27.5246 16.8509 27.8654 16.7187L27.3118 15.2911ZM25.8825 16.2247C25.4773 16.6411 25.1693 17.1464 24.9489 17.7236L26.3794 18.2698C26.5358 17.8601 26.7392 17.5399 26.98 17.2925L25.8825 16.2247ZM24.9506 17.7192C24.7215 18.3085 24.6159 18.9617 24.6159 19.6655H26.1471C26.1471 19.1131 26.23 18.6539 26.3777 18.2742L24.9506 17.7192ZM24.6159 19.6655C24.6159 20.3696 24.7216 21.0254 24.9489 21.6208L26.3794 21.0746C26.2299 20.6831 26.1471 20.2174 26.1471 19.6655H24.6159ZM24.9506 21.6252C25.1717 22.1936 25.4797 22.6922 25.8825 23.1063L26.98 22.0385C26.7368 21.7886 26.5335 21.4707 26.3777 21.0702L24.9506 21.6252ZM25.8899 23.1137C26.2974 23.5213 26.7735 23.8311 27.3118 24.0398L27.8654 22.6122C27.5246 22.48 27.229 22.2874 26.9726 22.031L25.8899 23.1137ZM27.3167 24.0417C27.8562 24.2467 28.4242 24.3473 29.0152 24.3473V22.8161C28.6012 22.8161 28.2183 22.7462 27.8606 22.6103L27.3167 24.0417ZM29.0152 24.3473C29.6312 24.3473 30.2177 24.2143 30.765 23.9463L30.0915 22.5712C29.7595 22.7337 29.404 22.8161 29.0152 22.8161V24.3473ZM30.7706 23.9435C31.2996 23.679 31.7648 23.3322 32.1611 22.9038L31.037 21.8641C30.7694 22.1534 30.4541 22.3898 30.0859 22.5739L30.7706 23.9435ZM32.1675 22.8969C32.5604 22.4614 32.8681 21.9674 33.0895 21.4191L31.6697 20.8457C31.5144 21.2304 31.3017 21.5708 31.0307 21.871L32.1675 22.8969ZM33.0867 21.4259C33.3218 20.8597 33.4413 20.2711 33.4413 19.6655H31.9101C31.9101 20.0646 31.8323 20.454 31.6725 20.8389L33.0867 21.4259ZM42.8633 27V27.7656H43.6289V27H42.8633ZM39.1893 27H38.4237V27.7656H39.1893V27ZM39.1893 12.5866V11.821H38.4237V12.5866H39.1893ZM40.0775 12.5866L40.7022 12.144L40.4733 11.821H40.0775V12.5866ZM41.2887 14.2958L40.6641 14.7384L41.164 15.4439L41.8037 14.8623L41.2887 14.2958ZM43.3074 13.0576L43.58 13.7731L43.5874 13.7702L43.3074 13.0576ZM48.8924 12.6135H49.658V11.8479H48.8924V12.6135ZM48.8924 16.2741V17.0397H49.658V16.2741H48.8924ZM44.559 16.4894L44.2619 15.7838L44.559 16.4894ZM42.8633 26.2344H39.1893V27.7656H42.8633V26.2344ZM39.9549 27V12.5866H38.4237V27H39.9549ZM39.1893 13.3522H40.0775V11.821H39.1893V13.3522ZM39.4529 13.0293L40.6641 14.7384L41.9134 13.8531L40.7022 12.144L39.4529 13.0293ZM41.8037 14.8623C42.3245 14.3888 42.915 14.0264 43.58 13.7731L43.0349 12.3422C42.1925 12.6631 41.4373 13.1261 40.7737 13.7293L41.8037 14.8623ZM43.5874 13.7702C44.2521 13.5091 44.9377 13.3791 45.6491 13.3791V11.8479C44.7455 11.8479 43.87 12.0141 43.0275 12.3451L43.5874 13.7702ZM45.6491 13.3791H48.8924V11.8479H45.6491V13.3791ZM48.1268 12.6135V16.2741H49.658V12.6135H48.1268ZM48.8924 15.5085H45.6491V17.0397H48.8924V15.5085ZM45.6491 15.5085C45.1657 15.5085 44.7009 15.599 44.2619 15.7838L44.8561 17.195C45.099 17.0928 45.3609 17.0397 45.6491 17.0397V15.5085ZM44.2619 15.7838C43.8335 15.9642 43.4536 16.2161 43.1294 16.5402L44.2122 17.6229C44.3905 17.4446 44.6026 17.3017 44.8561 17.195L44.2619 15.7838ZM43.1294 16.5402C42.8053 16.8643 42.5534 17.2443 42.373 17.6727L43.7842 18.2669C43.891 18.0134 44.0339 17.8012 44.2122 17.6229L43.1294 16.5402ZM42.373 17.6727C42.1882 18.1117 42.0977 18.5765 42.0977 19.0599H43.6289C43.6289 18.7716 43.682 18.5097 43.7842 18.2669L42.373 17.6727ZM42.0977 19.0599V27H43.6289V19.0599H42.0977ZM54.7332 9.62589L54.0362 9.30908L54.0322 9.31793L54.0284 9.32688L54.7332 9.62589ZM54.2083 10.4064L54.7385 10.9587L54.7441 10.9533L54.7497 10.9478L54.2083 10.4064ZM53.4143 10.9313L53.7133 11.6362L53.7233 11.6318L53.4143 10.9313ZM51.4898 10.9313L51.173 11.6283L51.1856 11.634L51.1983 11.6392L51.4898 10.9313ZM50.7093 10.4064L50.157 10.9367L50.1678 10.9479L50.179 10.9587L50.7093 10.4064ZM50.1844 9.62589L49.4796 9.9249L49.4834 9.93385L49.4874 9.9427L50.1844 9.62589ZM50.1844 7.72833L49.4839 7.41927L49.4796 7.42932L50.1844 7.72833ZM50.7093 6.94777L51.2506 7.48914L50.7093 6.94777ZM51.4898 6.42292L51.7888 7.12779L51.7988 7.12338L51.4898 6.42292ZM53.4143 6.42292L53.0975 7.1199L53.11 7.1256L53.1228 7.13085L53.4143 6.42292ZM54.2083 6.94777L53.6669 7.48914L53.6725 7.49466L53.6781 7.50007L54.2083 6.94777ZM54.7332 7.72833L54.0252 8.01983L54.0305 8.03258L54.0362 8.04514L54.7332 7.72833ZM54.3025 27V27.7656H55.0681V27H54.3025ZM50.6016 27H49.836V27.7656H50.6016V27ZM50.6016 12.5866V11.821H49.836V12.5866H50.6016ZM54.3025 12.5866H55.0681V11.821H54.3025V12.5866ZM54.1694 8.67038C54.1694 8.90742 54.1234 9.1173 54.0362 9.30908L55.4301 9.9427C55.6121 9.54233 55.7006 9.11521 55.7006 8.67038H54.1694ZM54.0284 9.32688C53.9406 9.53371 53.8207 9.71131 53.6669 9.86508L54.7497 10.9478C55.0445 10.653 55.2745 10.3102 55.438 9.9249L54.0284 9.32688ZM53.6781 9.85415C53.5228 10.0032 53.3344 10.1297 53.1053 10.2308L53.7233 11.6318C54.1042 11.4637 54.4452 11.2403 54.7385 10.9587L53.6781 9.85415ZM53.1153 10.2265C52.9194 10.3096 52.7032 10.3541 52.4588 10.3541V11.8853C52.8962 11.8853 53.317 11.8042 53.7133 11.6361L53.1153 10.2265ZM52.4588 10.3541C52.2144 10.3541 51.9908 10.3096 51.7813 10.2234L51.1983 11.6392C51.5989 11.8042 52.0213 11.8853 52.4588 11.8853V10.3541ZM51.8066 10.2343C51.5857 10.1339 51.3985 10.0068 51.2395 9.85415L50.179 10.9587C50.4686 11.2367 50.8018 11.4595 51.173 11.6283L51.8066 10.2343ZM51.2616 9.87624C51.1089 9.71722 50.9818 9.53001 50.8814 9.30908L49.4874 9.9427C49.6562 10.3139 49.879 10.6471 50.157 10.9367L51.2616 9.87624ZM50.8892 9.32688C50.8061 9.13099 50.7616 8.91484 50.7616 8.67038H49.2304C49.2304 9.10779 49.3115 9.52864 49.4796 9.9249L50.8892 9.32688ZM50.7616 8.67038C50.7616 8.43778 50.805 8.22577 50.8892 8.02734L49.4796 7.42932C49.3126 7.82304 49.2304 8.23906 49.2304 8.67038H50.7616ZM50.8849 8.03736C50.9849 7.81069 51.1083 7.63144 51.2506 7.48914L50.1679 6.40641C49.8795 6.69476 49.6531 7.03588 49.4839 7.4193L50.8849 8.03736ZM51.2506 7.48914C51.4044 7.33536 51.582 7.21546 51.7888 7.12772L51.1908 5.71812C50.8055 5.88158 50.4627 6.11159 50.1679 6.40641L51.2506 7.48914ZM51.7988 7.12338C52.0043 7.03274 52.2218 6.98665 52.4588 6.98665V5.45545C52.0139 5.45545 51.5854 5.54394 51.1808 5.72245L51.7988 7.12338ZM52.4588 6.98665C52.6958 6.98665 52.9057 7.03272 53.0975 7.1199L53.7311 5.72594C53.3307 5.54395 52.9036 5.45545 52.4588 5.45545V6.98665ZM53.1228 7.13085C53.3382 7.21954 53.517 7.33917 53.6669 7.48914L54.7497 6.40641C54.451 6.10778 54.1005 5.8775 53.7058 5.71498L53.1228 7.13085ZM53.6781 7.50007C53.8211 7.63731 53.9376 7.80702 54.0252 8.01983L55.4411 7.43683C55.2775 7.03955 55.0441 6.68888 54.7385 6.39548L53.6781 7.50007ZM54.0362 8.04514C54.1246 8.23962 54.1694 8.44538 54.1694 8.67038H55.7006C55.7006 8.23146 55.6109 7.80919 55.4301 7.41152L54.0362 8.04514ZM54.3025 26.2344H50.6016V27.7656H54.3025V26.2344ZM51.3672 27V12.5866H49.836V27H51.3672ZM50.6016 13.3522H54.3025V11.821H50.6016V13.3522ZM53.5369 12.5866V27H55.0681V12.5866H53.5369ZM60.7892 27V27.7656H61.5548V27H60.7892ZM57.1152 27H56.3496V27.7656H57.1152V27ZM57.1152 12.5866V11.821H56.3496V12.5866H57.1152ZM58.0034 12.5866L58.5823 12.0856L58.3534 11.821H58.0034V12.5866ZM59.2146 13.9862L58.6357 14.4872L59.1491 15.0805L59.7296 14.5527L59.2146 13.9862ZM61.2199 12.7481L61.4953 13.4625L61.4998 13.4607L61.2199 12.7481ZM66.0647 12.8154L65.7582 13.517L65.7651 13.5199L66.0647 12.8154ZM68.1103 14.2016L67.5648 14.7388L67.5689 14.7429L68.1103 14.2016ZM69.483 16.2606L68.7772 16.5574L68.7814 16.5671L69.483 16.2606ZM69.9944 27V27.7656H70.76V27H69.9944ZM66.3204 27H65.5548V27.7656H66.3204V27ZM66.1051 17.7006L65.3994 17.9977L65.4023 18.0045L66.1051 17.7006ZM62.4849 16.2202L62.1878 15.5146L62.4849 16.2202ZM61.0045 17.7006L61.7073 18.0045L61.7101 17.9977L61.0045 17.7006ZM60.7892 26.2344H57.1152V27.7656H60.7892V26.2344ZM57.8808 27V12.5866H56.3496V27H57.8808ZM57.1152 13.3522H58.0034V11.821H57.1152V13.3522ZM57.4245 13.0876L58.6357 14.4872L59.7936 13.4852L58.5823 12.0856L57.4245 13.0876ZM59.7296 14.5527C60.2519 14.0779 60.8392 13.7154 61.4953 13.4625L60.9444 12.0338C60.1112 12.355 59.3616 12.8179 58.6996 13.4197L59.7296 14.5527ZM61.4998 13.4607C62.1635 13.2 62.8535 13.0696 63.575 13.0696V11.5384C62.6635 11.5384 61.7835 11.7041 60.9399 12.0355L61.4998 13.4607ZM63.575 13.0696C64.3522 13.0696 65.0775 13.2197 65.7582 13.517L66.3711 12.1138C65.4908 11.7293 64.5562 11.5384 63.575 11.5384V13.0696ZM65.7651 13.5199C66.4555 13.8136 67.0533 14.2194 67.5648 14.7388L68.6558 13.6644C68.0009 12.9994 67.235 12.4812 66.3643 12.1109L65.7651 13.5199ZM67.5689 14.7429C68.0793 15.2533 68.4822 15.8557 68.7772 16.5574L70.1887 15.9639C69.8199 15.0865 69.3076 14.3162 68.6516 13.6602L67.5689 14.7429ZM68.7814 16.5671C69.0783 17.2468 69.2288 17.9764 69.2288 18.7638H70.76C70.76 17.7747 70.5695 16.8355 70.1846 15.9542L68.7814 16.5671ZM69.2288 18.7638V27H70.76V18.7638H69.2288ZM69.9944 26.2344H66.3204V27.7656H69.9944V26.2344ZM67.086 27V18.7638H65.5548V27H67.086ZM67.086 18.7638C67.086 18.2869 66.9945 17.8287 66.8078 17.3967L65.4023 18.0045C65.5027 18.2365 65.5548 18.487 65.5548 18.7638H67.086ZM66.8107 17.4035C66.6303 16.9751 66.3784 16.5952 66.0543 16.271L64.9715 17.3538C65.1498 17.5321 65.2927 17.7442 65.3995 17.9977L66.8107 17.4035ZM66.0543 16.271C65.7335 15.9503 65.361 15.6987 64.942 15.5175L64.3343 16.923C64.5792 17.0289 64.7899 17.1721 64.9715 17.3538L66.0543 16.271ZM64.942 15.5175C64.5101 15.3308 64.0519 15.2393 63.575 15.2393V16.7705C63.8517 16.7705 64.1023 16.8226 64.3343 16.923L64.942 15.5175ZM63.575 15.2393C63.0916 15.2393 62.6268 15.3298 62.1878 15.5146L62.782 16.9259C63.0249 16.8236 63.2868 16.7705 63.575 16.7705V15.2393ZM62.1878 15.5146C61.7594 15.695 61.3794 15.9469 61.0553 16.271L62.138 17.3538C62.3163 17.1755 62.5285 17.0326 62.782 16.9259L62.1878 15.5146ZM61.0553 16.271C60.7312 16.5952 60.4793 16.9751 60.2989 17.4035L61.7101 17.9977C61.8169 17.7442 61.9597 17.5321 62.138 17.3538L61.0553 16.271ZM60.3018 17.3967C60.115 17.8287 60.0236 18.2869 60.0236 18.7638H61.5548C61.5548 18.487 61.6069 18.2365 61.7072 18.0045L60.3018 17.3967ZM60.0236 18.7638V27H61.5548V18.7638H60.0236ZM86.5745 27V27.7656H87.3401V27H86.5745ZM85.6863 27L85.0653 27.4478L85.2944 27.7656H85.6863V27ZM84.2597 25.0217L84.8807 24.5739L84.3824 23.8829L83.7484 24.4519L84.2597 25.0217ZM83.1427 25.9099L83.5808 26.5378L83.5837 26.5358L83.1427 25.9099ZM81.9181 26.6232L82.2371 27.3193L82.2489 27.3136L81.9181 26.6232ZM80.5857 27.0942L80.3966 26.3523L80.3931 26.3532L80.5857 27.0942ZM76.3465 26.7578L76.0721 27.4725L76.0745 27.4734L76.3465 26.7578ZM74.0048 25.2774L73.4671 25.8225L73.4746 25.8297L74.0048 25.2774ZM72.4303 16.5836L73.1378 16.8761L73.1388 16.8738L72.4303 16.5836ZM74.0048 14.1612L73.4635 13.6198L73.4598 13.6235L74.0048 14.1612ZM76.3465 12.6001L76.6394 13.3074L76.643 13.306L76.3465 12.6001ZM83.1562 13.421L82.7084 14.0421L82.7152 14.0469L83.1562 13.421ZM84.2597 14.3227L83.7332 14.8785L84.3251 15.4392L84.8475 14.8133L84.2597 14.3227ZM85.6863 12.6135V11.8479H85.328L85.0985 12.123L85.6863 12.6135ZM86.5745 12.6135H87.3401V11.8479H86.5745V12.6135ZM82.5775 18.212L81.8657 18.494L81.869 18.5022L81.8724 18.5103L82.5775 18.212ZM81.7969 16.9604L81.2285 17.4734L81.2349 17.4803L81.7969 16.9604ZM80.6261 16.0857L80.2782 16.7676L80.2864 16.7719L80.2948 16.7759L80.6261 16.0857ZM77.7865 16.0049L77.5145 15.2892L77.5097 15.2911L77.7865 16.0049ZM76.6291 16.7586L76.0877 16.2171L76.0804 16.2247L76.6291 16.7586ZM75.862 17.9967L76.5756 18.2742L76.5773 18.2698L75.862 17.9967ZM75.862 21.3477L75.1468 21.6208L75.1485 21.6252L75.862 21.3477ZM76.6291 22.5724L76.0803 23.1063L76.0877 23.1137L76.6291 22.5724ZM77.7865 23.326L77.5097 24.0398L77.5145 24.0417L77.7865 23.326ZM80.6261 23.2587L80.9629 23.9463L80.9685 23.9435L80.6261 23.2587ZM81.7969 22.384L82.359 22.9039L82.3653 22.8969L81.7969 22.384ZM82.5775 21.1324L81.8704 20.8388L81.8676 20.8457L82.5775 21.1324ZM86.5745 26.2344H85.6863V27.7656H86.5745V26.2344ZM86.3073 26.5522L84.8807 24.5739L83.6387 25.4695L85.0653 27.4478L86.3073 26.5522ZM83.7484 24.4519C83.4214 24.7453 83.0726 25.0227 82.7018 25.284L83.5837 26.5358C84.0023 26.2408 84.3982 25.9261 84.7711 25.5915L83.7484 24.4519ZM82.7047 25.282C82.3534 25.5271 81.9811 25.744 81.5872 25.9327L82.2489 27.3136C82.7163 27.0896 83.1605 26.831 83.5808 26.5378L82.7047 25.282ZM81.5991 25.9272C81.2101 26.1055 80.8095 26.2471 80.3966 26.3523L80.7748 27.8361C81.2771 27.708 81.7647 27.5357 82.237 27.3192L81.5991 25.9272ZM80.3931 26.3532C80.0078 26.4534 79.615 26.5036 79.213 26.5036V28.0348C79.7441 28.0348 80.2665 27.9683 80.7784 27.8352L80.3931 26.3532ZM79.213 26.5036C78.2868 26.5036 77.424 26.3482 76.6185 26.0421L76.0745 27.4734C77.0634 27.8492 78.1116 28.0348 79.213 28.0348V26.5036ZM76.6208 26.043C75.8259 25.7379 75.1328 25.299 74.535 24.7251L73.4746 25.8297C74.2226 26.5478 75.0906 27.0958 76.0721 27.4725L76.6208 26.043ZM74.5425 24.7324C73.9586 24.1564 73.489 23.447 73.1388 22.5917L71.7218 23.172C72.1431 24.2009 72.7232 25.0885 73.4672 25.8224L74.5425 24.7324ZM73.1388 22.5917C72.7968 21.7569 72.6172 20.7859 72.6172 19.6655H71.086C71.086 20.9495 71.2921 22.1228 71.7218 23.172L73.1388 22.5917ZM72.6172 19.6655C72.6172 18.6332 72.7944 17.7067 73.1378 16.8761L71.7227 16.2911C71.2946 17.3267 71.086 18.4547 71.086 19.6655H72.6172ZM73.1388 16.8738C73.4896 16.0169 73.9613 15.2954 74.5498 14.6989L73.4598 13.6235C72.7206 14.3728 72.1425 15.2662 71.7218 16.2935L73.1388 16.8738ZM74.5462 14.7026C75.1472 14.1015 75.8431 13.6372 76.6394 13.3074L76.0536 11.8927C75.0734 12.2987 74.2082 12.8751 73.4635 13.6198L74.5462 14.7026ZM76.643 13.306C77.4424 12.9702 78.2967 12.8005 79.213 12.8005V11.2692C78.1017 11.2692 77.045 11.4763 76.05 11.8942L76.643 13.306ZM79.213 12.8005C79.615 12.8005 80.0136 12.8506 80.4101 12.9517L80.7883 11.4679C80.2697 11.3357 79.7441 11.2692 79.213 11.2692V12.8005ZM80.4101 12.9517C80.8183 13.0557 81.2149 13.1999 81.6007 13.3847L82.2623 12.0039C81.7868 11.776 81.2952 11.5971 80.7883 11.4679L80.4101 12.9517ZM81.6007 13.3847C81.9906 13.5715 82.3596 13.7906 82.7085 14.042L83.6039 12.8C83.1811 12.4952 82.7338 12.2297 82.2623 12.0039L81.6007 13.3847ZM82.7152 14.0469C83.0807 14.3043 83.4198 14.5816 83.7332 14.8785L84.7863 13.7669C84.4178 13.4178 84.0212 13.0939 83.5971 12.7951L82.7152 14.0469ZM84.8475 14.8133L86.274 13.1041L85.0985 12.123L83.672 13.8321L84.8475 14.8133ZM85.6863 13.3791H86.5745V11.8479H85.6863V13.3791ZM85.8089 12.6135V27H87.3401V12.6135H85.8089ZM83.6392 19.6655C83.6392 19.0597 83.5196 18.4738 83.2826 17.9137L81.8724 18.5103C82.0302 18.8833 82.108 19.2664 82.108 19.6655H83.6392ZM83.2893 17.93C83.0677 17.3708 82.758 16.872 82.359 16.4406L81.2349 17.4803C81.4998 17.7666 81.7105 18.1022 81.8657 18.494L83.2893 17.93ZM82.3653 16.4475C81.9663 16.0054 81.4954 15.6537 80.9574 15.3955L80.2948 16.7759C80.654 16.9483 80.9636 17.1798 81.2286 17.4734L82.3653 16.4475ZM80.974 15.4037C80.4247 15.1234 79.8341 14.9836 79.213 14.9836V16.5148C79.5968 16.5148 79.9483 16.5993 80.2782 16.7676L80.974 15.4037ZM79.213 14.9836C78.6221 14.9836 78.054 15.0842 77.5145 15.2892L78.0584 16.7206C78.4161 16.5847 78.7991 16.5148 79.213 16.5148V14.9836ZM77.5097 15.2911C76.9713 15.4999 76.4953 15.8096 76.0877 16.2172L77.1705 17.2999C77.4268 17.0436 77.7224 16.8509 78.0633 16.7187L77.5097 15.2911ZM76.0804 16.2247C75.6752 16.6411 75.3672 17.1464 75.1468 17.7236L76.5773 18.2698C76.7337 17.8601 76.937 17.5399 77.1778 17.2925L76.0804 16.2247ZM75.1485 17.7192C74.9193 18.3085 74.8138 18.9617 74.8138 19.6655H76.345C76.345 19.1131 76.4279 18.6539 76.5756 18.2742L75.1485 17.7192ZM74.8138 19.6655C74.8138 20.3696 74.9194 21.0254 75.1468 21.6208L76.5773 21.0746C76.4278 20.6831 76.345 20.2174 76.345 19.6655H74.8138ZM75.1485 21.6252C75.3695 22.1936 75.6776 22.6922 76.0804 23.1063L77.1778 22.0385C76.9347 21.7886 76.7313 21.4707 76.5756 21.0702L75.1485 21.6252ZM76.0877 23.1137C76.4953 23.5213 76.9713 23.8311 77.5097 24.0398L78.0633 22.6122C77.7224 22.48 77.4268 22.2874 77.1705 22.031L76.0877 23.1137ZM77.5145 24.0417C78.054 24.2467 78.6221 24.3473 79.213 24.3473V22.8161C78.7991 22.8161 78.4161 22.7462 78.0584 22.6103L77.5145 24.0417ZM79.213 24.3473C79.829 24.3473 80.4156 24.2143 80.9629 23.9463L80.2893 22.5712C79.9574 22.7337 79.6019 22.8161 79.213 22.8161V24.3473ZM80.9685 23.9435C81.4975 23.679 81.9627 23.3322 82.359 22.9038L81.2349 21.8641C80.9673 22.1534 80.6519 22.3898 80.2837 22.5739L80.9685 23.9435ZM82.3653 22.8969C82.7583 22.4614 83.0659 21.9674 83.2874 21.4191L81.8676 20.8457C81.7122 21.2304 81.4995 21.5708 81.2286 21.871L82.3653 22.8969ZM83.2846 21.4259C83.5196 20.8597 83.6392 20.2711 83.6392 19.6655H82.108C82.108 20.0646 82.0301 20.454 81.8704 20.8389L83.2846 21.4259Z\" fill=\"#BB5353\"/>\n<path d=\"M13.7502 41.179H11.8257V33.4609H8.92556V31.5297H16.6437V33.4609H13.7502V41.179ZM23.7386 37.3233V35.3921C23.7386 35.1274 23.6871 34.8784 23.5839 34.6452C23.4852 34.4074 23.3484 34.201 23.1734 34.0261C22.9985 33.8511 22.7921 33.7143 22.5543 33.6156C22.3211 33.5125 22.0721 33.4609 21.8074 33.4609C21.5428 33.4609 21.2916 33.5125 21.0538 33.6156C20.8205 33.7143 20.6164 33.8511 20.4415 34.0261C20.2665 34.201 20.1274 34.4074 20.0243 34.6452C19.9256 34.8784 19.8762 35.1274 19.8762 35.3921V37.3233H23.7386ZM25.6698 41.179H23.7386V39.2478H19.8762V41.179H17.9518V35.3921C17.9518 34.8582 18.0527 34.3581 18.2546 33.8915C18.4564 33.4205 18.7301 33.01 19.0755 32.6601C19.4254 32.3102 19.8336 32.0343 20.3002 31.8325C20.7712 31.6306 21.2736 31.5297 21.8074 31.5297C22.3413 31.5297 22.8415 31.6306 23.308 31.8325C23.779 32.0343 24.1895 32.3102 24.5394 32.6601C24.8893 33.01 25.1652 33.4205 25.367 33.8915C25.5689 34.3581 25.6698 34.8582 25.6698 35.3921V41.179ZM35.194 31.5297L32.0247 41.179H30.0934L26.9376 31.5297H29.1312L31.0557 37.9693L32.9869 31.5297H35.194ZM42.2755 37.3233V35.3921C42.2755 35.1274 42.2239 34.8784 42.1207 34.6452C42.0221 34.4074 41.8852 34.201 41.7103 34.0261C41.5353 33.8511 41.329 33.7143 41.0912 33.6156C40.8579 33.5125 40.609 33.4609 40.3443 33.4609C40.0796 33.4609 39.8284 33.5125 39.5907 33.6156C39.3574 33.7143 39.1533 33.8511 38.9783 34.0261C38.8034 34.201 38.6643 34.4074 38.5611 34.6452C38.4624 34.8784 38.4131 35.1274 38.4131 35.3921V37.3233H42.2755ZM44.2067 41.179H42.2755V39.2478H38.4131V41.179H36.4886V35.3921C36.4886 34.8582 36.5896 34.3581 36.7914 33.8915C36.9933 33.4205 37.2669 33.01 37.6124 32.6601C37.9623 32.3102 38.3705 32.0343 38.837 31.8325C39.3081 31.6306 39.8105 31.5297 40.3443 31.5297C40.8781 31.5297 41.3783 31.6306 41.8449 31.8325C42.3159 32.0343 42.7263 32.3102 43.0763 32.6601C43.4262 33.01 43.702 33.4205 43.9039 33.8915C44.1058 34.3581 44.2067 34.8582 44.2067 35.3921V41.179ZM48.5025 33.4609V37.3233H50.4337C50.6983 37.3233 50.9473 37.2739 51.1806 37.1752C51.4139 37.0721 51.618 36.933 51.7929 36.758C51.9679 36.5831 52.1047 36.379 52.2034 36.1457C52.3066 35.908 52.3581 35.6567 52.3581 35.3921C52.3581 35.1274 52.3066 34.8784 52.2034 34.6452C52.1047 34.4074 51.9679 34.201 51.7929 34.0261C51.618 33.8511 51.4139 33.7143 51.1806 33.6156C50.9473 33.5125 50.6983 33.4609 50.4337 33.4609H48.5025ZM48.5025 41.179H46.5713V31.5297H50.4337C50.7881 31.5297 51.129 31.5768 51.4565 31.671C51.7839 31.7607 52.089 31.8908 52.3716 32.0612C52.6587 32.2272 52.9189 32.4291 53.1522 32.6669C53.3899 32.9001 53.5918 33.1603 53.7578 33.4474C53.9282 33.7345 54.0583 34.0418 54.148 34.3693C54.2422 34.6967 54.2894 35.0377 54.2894 35.3921C54.2894 35.724 54.2467 36.047 54.1615 36.361C54.0808 36.6751 53.9619 36.9734 53.8049 37.256C53.6523 37.5386 53.4639 37.7988 53.2396 38.0365C53.0153 38.2743 52.7641 38.4807 52.486 38.6556L53.5559 41.179H51.5036L50.6625 39.2343L48.5025 39.2478V41.179ZM62.8647 41.179H56.2502V31.5297H62.8647V33.4609H58.1814V35.3921H61.3507V37.3233H58.1814V39.2478H62.8647V41.179ZM64.2334 34.4231C64.2334 34.0239 64.3096 33.6493 64.4622 33.2994C64.6147 32.9495 64.821 32.6444 65.0812 32.3842C65.3459 32.1196 65.6532 31.911 66.0031 31.7584C66.353 31.6059 66.7276 31.5297 67.1268 31.5297H71.5545V33.4609H67.1268C66.9922 33.4609 66.8666 33.4855 66.75 33.5349C66.6334 33.5842 66.5302 33.6538 66.4405 33.7435C66.3552 33.8287 66.2879 33.9296 66.2386 34.0463C66.1893 34.1629 66.1646 34.2885 66.1646 34.4231C66.1646 34.5577 66.1893 34.6855 66.2386 34.8067C66.2879 34.9233 66.3552 35.0265 66.4405 35.1162C66.5302 35.2014 66.6334 35.2687 66.75 35.3181C66.8666 35.3674 66.9922 35.3921 67.1268 35.3921H69.058C69.4573 35.3921 69.8318 35.4683 70.1818 35.6209C70.5361 35.7689 70.8434 35.9752 71.1036 36.2399C71.3683 36.5001 71.5746 36.8074 71.7227 37.1618C71.8752 37.5117 71.9515 37.8863 71.9515 38.2855C71.9515 38.6848 71.8752 39.0593 71.7227 39.4092C71.5746 39.7591 71.3683 40.0664 71.1036 40.3311C70.8434 40.5913 70.5361 40.7976 70.1818 40.9502C69.8318 41.1027 69.4573 41.179 69.058 41.179H64.7717V39.2478H69.058C69.1926 39.2478 69.3182 39.2231 69.4348 39.1737C69.5515 39.1244 69.6524 39.0571 69.7376 38.9719C69.8274 38.8821 69.8969 38.779 69.9462 38.6623C69.9956 38.5457 70.0203 38.4201 70.0203 38.2855C70.0203 38.1509 69.9956 38.0253 69.9462 37.9087C69.8969 37.7921 69.8274 37.6911 69.7376 37.6059C69.6524 37.5162 69.5515 37.4466 69.4348 37.3973C69.3182 37.3479 69.1926 37.3233 69.058 37.3233H67.1268C66.7276 37.3233 66.353 37.247 66.0031 37.0945C65.6532 36.942 65.3459 36.7356 65.0812 36.4754C64.821 36.2108 64.6147 35.9035 64.4622 35.5536C64.3096 35.1992 64.2334 34.8224 64.2334 34.4231Z\" fill=\"#BB5353\"/>\n<path d=\"M7.31076 31.7241H7.67655V31.3584H7.31076V31.7241ZM7.31076 33.5695V33.9353H7.67655V33.5695H7.31076ZM2.42406 33.8396L2.16541 33.5809L2.42406 33.8396ZM2.23117 34.8555L1.89238 34.9935L1.89429 34.998L2.23117 34.8555ZM2.42406 35.1513L2.15887 35.4032L2.16533 35.41L2.17212 35.4165L2.42406 35.1513ZM5.99907 35.6335L5.85289 35.9689L5.85808 35.971L5.99907 35.6335ZM6.87996 36.2251L6.61907 36.4815L6.62353 36.4859L6.87996 36.2251ZM7.47151 37.1059L7.13395 37.247L7.13619 37.2521L7.47151 37.1059ZM7.47151 39.2535L7.13617 39.1074L7.13463 39.111L7.47151 39.2535ZM6.87996 40.1344L7.13861 40.3931L6.87996 40.1344ZM5.99907 40.726L5.85446 40.39L5.85291 40.3906L5.99907 40.726ZM0.829453 40.9446H0.463665V41.3104H0.829453V40.9446ZM0.829453 39.0992V38.7334H0.463665V39.0992H0.829453ZM5.5747 37.5303L5.3095 37.7823L5.31596 37.7891L5.32276 37.7955L5.5747 37.5303ZM2.00612 37.0416L1.85996 37.377L2.00612 37.0416ZM1.12523 36.4501L0.864337 36.7066L0.868796 36.711L1.12523 36.4501ZM0.533679 35.5692L0.197684 35.7138L0.198363 35.7154L0.533679 35.5692ZM0.680852 34.489C0.680852 34.1554 0.744273 33.8475 0.868996 33.5614L0.198363 33.269C0.0315985 33.6516 -0.0507245 34.0595 -0.0507245 34.489H0.680852ZM0.868996 33.5614C0.997143 33.2674 1.16883 33.0144 1.38388 32.7994L0.866576 32.2821C0.584378 32.5643 0.361703 32.8943 0.198363 33.269L0.868996 33.5614ZM1.38388 32.7994C1.60377 32.5795 1.85905 32.4059 2.15228 32.2781L1.85996 31.6074C1.48449 31.7711 1.1525 31.9962 0.866576 32.2821L1.38388 32.7994ZM2.15228 32.2781C2.43841 32.1534 2.74634 32.0899 3.07991 32.0899V31.3584C2.65046 31.3584 2.24253 31.4407 1.85996 31.6074L2.15228 32.2781ZM3.07991 32.0899H7.31076V31.3584H3.07991V32.0899ZM6.94498 31.7241V33.5695H7.67655V31.7241H6.94498ZM7.31076 33.2037H3.07991V33.9353H7.31076V33.2037ZM3.07991 33.2037C2.90546 33.2037 2.73664 33.236 2.57731 33.3034L2.86236 33.9771C2.92594 33.9502 2.99716 33.9353 3.07991 33.9353V33.2037ZM2.57731 33.3034C2.42239 33.3689 2.28439 33.4619 2.16541 33.5809L2.68271 34.0982C2.7352 34.0457 2.79438 34.0059 2.86236 33.9771L2.57731 33.3034ZM2.16541 33.5809C2.04898 33.6973 1.95885 33.8338 1.89429 33.9864L2.56804 34.2714C2.59779 34.2011 2.63625 34.1447 2.68271 34.0982L2.16541 33.5809ZM1.89429 33.9864C1.82688 34.1457 1.79465 34.3145 1.79465 34.489H2.52622C2.52622 34.4062 2.54115 34.335 2.56804 34.2714L1.89429 33.9864ZM1.79465 34.489C1.79465 34.6635 1.82688 34.8327 1.89241 34.9935L2.56992 34.7175C2.54114 34.6468 2.52622 34.5717 2.52622 34.489H1.79465ZM1.89429 34.998C1.95816 35.149 2.04643 35.2849 2.15887 35.4032L2.68926 34.8993C2.6388 34.8462 2.59848 34.7849 2.56804 34.713L1.89429 34.998ZM2.17212 35.4165C2.29047 35.5289 2.42634 35.6172 2.57731 35.681L2.86236 35.0073C2.79043 34.9768 2.72911 34.9365 2.676 34.8861L2.17212 35.4165ZM2.57731 35.681C2.73664 35.7484 2.90546 35.7807 3.07991 35.7807V35.0491C2.99716 35.0491 2.92594 35.0342 2.86236 35.0073L2.57731 35.681ZM3.07991 35.7807H4.92528V35.0491H3.07991V35.7807ZM4.92528 35.7807C5.25885 35.7807 5.56678 35.8441 5.85291 35.9688L6.14523 35.2982C5.76266 35.1314 5.35472 35.0491 4.92528 35.0491V35.7807ZM5.85808 35.971C6.15336 36.0944 6.40584 36.2645 6.61911 36.4815L7.14081 35.9686C6.85684 35.6798 6.52206 35.4556 6.14006 35.296L5.85808 35.971ZM6.62353 36.4859C6.84048 36.6992 7.01064 36.9517 7.13399 37.2469L7.80903 36.965C7.64947 36.583 7.42526 36.2482 7.13639 35.9642L6.62353 36.4859ZM7.13619 37.2521C7.26092 37.5382 7.32434 37.8462 7.32434 38.1797H8.05591C8.05591 37.7503 7.97359 37.3424 7.80683 36.9598L7.13619 37.2521ZM7.32434 38.1797C7.32434 38.5133 7.26092 38.8212 7.13619 39.1074L7.80683 39.3997C7.97359 39.0171 8.05591 38.6092 8.05591 38.1797H7.32434ZM7.13463 39.111C7.01125 39.4026 6.8404 39.6567 6.62131 39.8758L7.13861 40.3931C7.42534 40.1063 7.64886 39.7731 7.80839 39.396L7.13463 39.111ZM6.62131 39.8758C6.40704 40.09 6.15263 40.2616 5.85447 40.39L6.14367 41.062C6.52279 40.8988 6.85564 40.676 7.13861 40.3931L6.62131 39.8758ZM5.85291 40.3906C5.56678 40.5154 5.25885 40.5788 4.92528 40.5788V41.3104C5.35472 41.3104 5.76266 41.228 6.14523 41.0613L5.85291 40.3906ZM4.92528 40.5788H0.829453V41.3104H4.92528V40.5788ZM1.19524 40.9446V39.0992H0.463665V40.9446H1.19524ZM0.829453 39.465H4.92528V38.7334H0.829453V39.465ZM4.92528 39.465C5.09973 39.465 5.26855 39.4328 5.42788 39.3654L5.14283 38.6916C5.07925 38.7185 5.00803 38.7334 4.92528 38.7334V39.465ZM5.42788 39.3654C5.58048 39.3008 5.71692 39.2107 5.83335 39.0942L5.31605 38.5769C5.26958 38.6234 5.21313 38.6619 5.14283 38.6916L5.42788 39.3654ZM5.83335 39.0942C5.95233 38.9753 6.04536 38.8373 6.1109 38.6823L5.43715 38.3973C5.40838 38.4653 5.36853 38.5244 5.31605 38.5769L5.83335 39.0942ZM6.1109 38.6823C6.17831 38.523 6.21054 38.3542 6.21054 38.1797H5.47896C5.47896 38.2625 5.46404 38.3337 5.43715 38.3973L6.1109 38.6823ZM6.21054 38.1797C6.21054 38.0053 6.17831 37.8365 6.1109 37.6771L5.43715 37.9622C5.46404 38.0258 5.47896 38.097 5.47896 38.1797H6.21054ZM6.1109 37.6771C6.04464 37.5205 5.94967 37.382 5.82663 37.2651L5.32276 37.7955C5.37119 37.8415 5.40911 37.8959 5.43715 37.9622L6.1109 37.6771ZM5.83989 37.2784C5.72301 37.1553 5.58451 37.0604 5.42788 36.9941L5.14283 37.6679C5.2091 37.6959 5.2635 37.7338 5.3095 37.7823L5.83989 37.2784ZM5.42788 36.9941C5.26855 36.9267 5.09973 36.8945 4.92528 36.8945V37.6261C5.00803 37.6261 5.07925 37.641 5.14283 37.6679L5.42788 36.9941ZM4.92528 36.8945H3.07991V37.6261H4.92528V36.8945ZM3.07991 36.8945C2.74634 36.8945 2.43841 36.8311 2.15228 36.7063L1.85996 37.377C2.24253 37.5437 2.65046 37.6261 3.07991 37.6261V36.8945ZM2.15228 36.7063C1.85774 36.5779 1.60176 36.4056 1.38166 36.1892L0.868796 36.711C1.15451 36.9918 1.48579 37.2139 1.85996 37.377L2.15228 36.7063ZM1.38608 36.1937C1.16971 35.9736 0.997386 35.7176 0.868996 35.423L0.198363 35.7154C0.36146 36.0895 0.583504 36.4208 0.864375 36.7065L1.38608 36.1937ZM0.869671 35.4246C0.744273 35.1332 0.680852 34.8225 0.680852 34.489H-0.0507245C-0.0507245 34.9185 0.0315978 35.3279 0.197687 35.7138L0.869671 35.4246Z\" fill=\"#BB5353\"/>\n<path d=\"M74.6638 35.6269L74.2658 35.2308L73.851 35.6477L74.2866 36.0428L74.6638 35.6269ZM76.6771 37.4527L77.0952 37.8274L77.4677 37.4118L77.0542 37.0368L76.6771 37.4527ZM75.6951 38.5481L75.3106 38.9572L75.7294 39.351L76.1132 38.9229L75.6951 38.5481ZM72.6505 35.6861L72.2458 35.2969L71.8522 35.7062L72.266 36.0952L72.6505 35.6861ZM75.626 32.5921L76.0115 32.1839L75.607 31.802L75.2214 32.2029L75.626 32.5921ZM76.687 33.5938L77.0849 33.9899L77.4915 33.5813L77.0724 33.1856L76.687 33.5938ZM74.2866 36.0428L76.2999 37.8686L77.0542 37.0368L75.041 35.211L74.2866 36.0428ZM76.259 37.0779L75.277 38.1734L76.1132 38.9229L77.0952 37.8274L76.259 37.0779ZM76.0797 38.1391L73.035 35.277L72.266 36.0952L75.3106 38.9572L76.0797 38.1391ZM73.0552 36.0753L76.0307 32.9813L75.2214 32.2029L72.2458 35.2969L73.0552 36.0753ZM75.2406 33.0004L76.3015 34.0021L77.0724 33.1856L76.0115 32.1839L75.2406 33.0004ZM76.289 33.1978L74.2658 35.2308L75.0618 36.0229L77.0849 33.9899L76.289 33.1978ZM79.9329 39.4758V40.0373H80.308L80.4516 39.6907L79.9329 39.4758ZM78.4772 39.4758L77.9585 39.261L77.6369 40.0373H78.4772V39.4758ZM81.4083 32.3997V31.8382H81.0332L80.8896 32.1848L81.4083 32.3997ZM82.864 32.3997L83.3827 32.6145L83.7043 31.8382H82.864V32.3997ZM79.9329 38.9144H78.4772V40.0373H79.9329V38.9144ZM78.9959 39.6907L81.927 32.6145L80.8896 32.1848L77.9585 39.261L78.9959 39.6907ZM81.4083 32.9611H82.864V31.8382H81.4083V32.9611ZM82.3453 32.1848L79.4142 39.261L80.4516 39.6907L83.3827 32.6145L82.3453 32.1848ZM84.6543 33.5938L84.2688 33.1856L83.8497 33.5813L84.2563 33.9899L84.6543 33.5938ZM85.7152 32.5921L86.1199 32.2029L85.7343 31.802L85.3298 32.1839L85.7152 32.5921ZM88.6908 35.6861L89.0753 36.0952L89.4891 35.7062L89.0954 35.2969L88.6908 35.6861ZM85.6461 38.5481L85.2281 38.9229L85.6118 39.351L86.0307 38.9572L85.6461 38.5481ZM84.6642 37.4527L84.287 37.0368L83.8735 37.4118L84.2461 37.8274L84.6642 37.4527ZM86.6775 35.6269L87.0546 36.0428L87.4903 35.6477L87.0754 35.2308L86.6775 35.6269ZM85.0397 34.0021L86.1007 33.0004L85.3298 32.1839L84.2688 33.1856L85.0397 34.0021ZM85.3105 32.9813L88.2861 36.0753L89.0954 35.2969L86.1199 32.2029L85.3105 32.9813ZM88.3062 35.277L85.2616 38.1391L86.0307 38.9572L89.0753 36.0952L88.3062 35.277ZM86.0642 38.1734L85.0822 37.0779L84.2461 37.8274L85.2281 38.9229L86.0642 38.1734ZM85.0413 37.8686L87.0546 36.0428L86.3003 35.211L84.287 37.0368L85.0413 37.8686ZM87.0754 35.2308L85.0523 33.1978L84.2563 33.9899L86.2795 36.0229L87.0754 35.2308Z\" fill=\"#BB5353\"/>\n</svg>\n)\n\nexport default Logo\n", "const Twitter = () => <svg width=\"35\" height=\"29\" viewBox=\"0 0 35 29\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M11.0071 29C24.2153 29 31.4384 17.844 31.4384 8.16988C31.4384 7.85306 31.4321 7.53768 31.418 7.22361C32.8235 6.1868 34.0364 4.90306 35 3.43259C33.7133 4.01577 32.3288 4.40829 30.8763 4.58526C32.3589 3.67894 33.497 2.24511 34.034 0.535993C32.6244 1.38852 31.0823 1.9895 29.4742 2.31304C28.1638 0.89001 26.2983 0 24.2326 0C20.2671 0 17.0513 3.27859 17.0513 7.31996C17.0513 7.89452 17.1144 8.45321 17.2376 8.98927C11.2695 8.68311 5.97739 5.76991 2.43563 1.34023C1.79773 2.45749 1.4622 3.72727 1.46331 5.0199C1.46331 7.55986 2.731 9.80207 4.65884 11.1139C3.5185 11.0784 2.40319 10.7644 1.40669 10.1982C1.40562 10.229 1.40562 10.2589 1.40562 10.2917C1.40562 13.8372 3.8808 16.7975 7.16653 17.4682C6.54943 17.6396 5.91265 17.7262 5.27305 17.7258C4.81115 17.7258 4.36099 17.6795 3.92349 17.5939C4.83768 20.5027 7.48858 22.6195 10.6315 22.6787C8.17378 24.6426 5.07777 25.8124 1.71287 25.8124C1.14045 25.8129 0.568506 25.779 0 25.711C3.17803 27.7877 6.95163 28.9995 11.0075 28.9995\" fill=\"#F3EDDD\"/>\n</svg>\n\n\nexport default Twitter\n", "const Github = () => (<svg width=\"34\" height=\"33\" viewBox=\"0 0 34 33\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M17.0001 0C7.6124 0 0 7.57418 0 16.9177C0 24.3925 4.87103 30.7339 11.6257 32.9709C12.4753 33.1275 12.7873 32.6039 12.7873 32.1571C12.7873 31.7537 12.7714 30.4209 12.7642 29.0073C8.03465 30.0307 7.03669 27.0112 7.03669 27.0112C6.26338 25.0558 5.14915 24.5359 5.14915 24.5359C3.60681 23.4859 5.26541 23.5074 5.26541 23.5074C6.97255 23.6268 7.87146 25.2508 7.87146 25.2508C9.38767 27.8372 11.8484 27.0894 12.8185 26.6572C12.971 25.5637 13.4117 24.8175 13.8978 24.395C10.1219 23.9671 6.15245 22.5165 6.15245 16.0342C6.15245 14.1872 6.81656 12.6779 7.90412 11.4932C7.72759 11.067 7.14575 9.34642 8.06878 7.01612C8.06878 7.01612 9.49633 6.56142 12.745 8.75028C14.101 8.37532 15.5553 8.18744 17.0001 8.18107C18.4448 8.18744 19.9002 8.37532 21.2589 8.75028C24.5037 6.56142 25.9292 7.01612 25.9292 7.01612C26.8545 9.34642 26.2724 11.067 26.0959 11.4932C27.1858 12.6779 27.8454 14.1871 27.8454 16.0342C27.8454 22.5319 23.8685 23.9627 20.083 24.3815C20.6927 24.9065 21.2361 25.9361 21.2361 27.5144C21.2361 29.7779 21.2163 31.5998 21.2163 32.1571C21.2163 32.6073 21.5223 33.1348 22.3841 32.9687C29.1351 30.7291 34 24.39 34 16.9177C34 7.57418 26.3887 0 17.0001 0Z\" fill=\"#F3EDDD\"/>\n</svg>)\n\n\n\nexport default Github\n", "const Linkedin = () => (<svg width=\"33\" height=\"33\" viewBox=\"0 0 33 33\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<g clipPath=\"url(#clip0_8_6)\">\n<path d=\"M0 2.42047C0 1.1209 1.08798 0.06604 2.42915 0.06604H30.4388C31.7805 0.06604 32.868 1.1209 32.868 2.42047V30.58C32.868 31.88 31.7805 32.934 30.4388 32.934H2.42915C1.08811 32.934 0 31.8801 0 30.5804V2.42008V2.42047Z\" fill=\"#F3EDDD\"/>\n<path d=\"M9.98832 27.5721V12.7748H5.06994V27.5721H9.98884H9.98832ZM7.53016 10.7549C9.24494 10.7549 10.3125 9.61862 10.3125 8.19862C10.2804 6.74627 9.24494 5.64172 7.56277 5.64172C5.87944 5.64172 4.78003 6.74627 4.78003 8.19849C4.78003 9.61849 5.84721 10.7548 7.49793 10.7548H7.52977L7.53016 10.7549ZM12.7107 27.5721H17.6287V19.3095C17.6287 18.8679 17.6608 18.4251 17.7907 18.1096C18.1461 17.2256 18.9554 16.3106 20.3144 16.3106C22.0936 16.3106 22.8058 17.6674 22.8058 19.6568V27.5721H27.7237V19.0878C27.7237 14.5429 25.2976 12.4279 22.0618 12.4279C19.4089 12.4279 18.2437 13.9107 17.5964 14.9206H17.6291V12.7754H12.711C12.7752 14.1635 12.7106 27.5726 12.7106 27.5726L12.7107 27.5721Z\" fill=\"#BB5353\"/>\n</g>\n<defs>\n<clipPath id=\"clip0_8_6\">\n<rect width=\"32.868\" height=\"33\" fill=\"white\"/>\n</clipPath>\n</defs>\n</svg>\n)\n\nexport default Linkedin\n", "/* eslint-disable react/react-in-jsx-scope */\nimport type { MetaFunction, LoaderFunction } from \"remix\";\nimport { useLoaderData, json, Link } from \"remix\";\n\n\nimport Pin from '~/assets/pin.png'\nimport First from '~/assets/xp/first.png'\nimport FirstMobile from '~/assets/first-mobile.png'\n\nimport styles from '~/styles/xp/styles.css'\n\nexport function links() {\n  return [{ rel: 'stylesheet', href: styles }];\n}\n\n\ntype IndexData = {\n  education: Array<{ degree: string, institution: string, location: string, startBy: number, finishBy: number }>\n  experience: Array<{ title: string, company: string, consultant?: string, techs: string[], time: string }>,\n  languages: Array<{ name: string; grade: number }>\n  softSkills: string[]\n};\n\n// Loaders provide data to components and are only ever called on the server, so\n// you can connect to a database or run any server side code you want right next\n// to the component that renders it.\n// https://remix.run/api/conventions#loader\nexport const loader: LoaderFunction = () => {\n  const data: IndexData = {\n    education: [{ degree: 'Bachelor in Control and Automation Engineer', institution: 'Universidade Federal de Santa Catarina', location: 'Florian\u00F3polis, Brasil', startBy: 2014, finishBy: 2021 }, { degree: 'High School', institution: 'Col\u00E9gio Catarinense', location: 'Florian\u00F3polis, Brasil', startBy: 2012, finishBy: 2014 }],\n    experience: [{\n      time: 'SEP 2021 - CURRENT',\n      title: 'Mid-level Frontend Software Engineer',\n      company: 'Bliss Applications',\n      consultant: 'Consultant @ OnRising',\n      techs: ['ReactJS', 'GraphQL', 'Apollo', 'NextJS', 'NestJS', 'Typescript', 'Design System', 'Jenkins', 'Agile']\n    }, {\n      time: 'JAN 2021 - SEP 2021',\n      title: 'Mid-level Frontend Software Engineer',\n      company: 'Jungle Devs',\n      techs: ['ReactJS', 'Redux', 'cra', 'Javascript', 'SEO', 'SSR', 'Material UI', 'aws', 'webpack', 'agile']\n    }, {\n      time: 'JAN 2019 - JAN 2021',\n      title: 'Frontend Software Engineer Intern',\n      company: 'Jungle Devs',\n      techs: ['ReactJS', 'Redux', 'cra', 'Javascript', 'Material UI', 'webpack', 'agile']\n    }],\n    languages: [],\n    softSkills: [],\n  };\n\n  // https://remix.run/api/remix#json\n  return json(data);\n};\n\n// https://remix.run/api/conventions#meta\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"Marina's Profile\",\n    description: \"Check out my new website\"\n  };\n};\n\n\n\n// https://remix.run/guides/routing#index-routes\nexport default function Index() {\n  const data = useLoaderData<IndexData>();\n\n  return (\n    <div>\n      <section className=\"education\">\n        <img className=\"photo-education\" src={First} aria-hidden=\"true\" />\n        <div>\n          <h1 className=\"title\">Education</h1>\n          {data.education.map(item => <div key={item.degree} className=\"container-education\">\n            <div className=\"years\">\n              <p className=\"year\">{item.startBy}</p>\n              <p className=\"year\">{item.finishBy}</p>\n            </div>\n            <div className=\"content-education\">\n              <h2 className=\"education-title\">{item.degree}</h2>\n              <p className=\"education-text\">{item.institution} <br /> {item.location}</p>\n            </div>\n          </div>)}\n        </div>\n      </section>\n      <section className=\"experience\">\n        <h1 className=\"experience-title\">experience</h1>\n        <div className=\"dots\">{data.experience.map((item, index) => {\n          if (index % 2 === 0) {\n            return (<>\n            <p className=\"time\">{item.time}</p>\n            <div className=\"circle\"/>\n            <div className=\"experience-content\">\n              <h2 className=\"experience-subtitle\">{item.title}</h2>\n                <div className=\"experience-location\">\n                  <p className=\"experience-company\">\n                    {item.company}\n                  </p>\n                  {item.consultant && <p className=\"experience-company\">\n                    {item.consultant}\n                  </p>}\n                </div>\n                <div className=\"experience-tech\">\n                  {item.techs.map(tech => <p key={item.time + tech} className=\"tech\">{tech}</p>)}\n                </div>\n            </div>\n            </>)\n          }\n        })}</div>\n      </section>\n    </div>\n  );\n}\n", "/* eslint-disable react/react-in-jsx-scope */\nimport type { MetaFunction, LoaderFunction } from \"remix\";\nimport { useLoaderData, json, Link } from \"remix\";\n\n\nimport Pin from '~/assets/pin.png'\nimport First from '~/assets/first.png'\nimport FirstMobile from '~/assets/first-mobile.png'\nimport Second from '~/assets/second.png'\nimport SecondMobile from '~/assets/second-mobile.png'\nimport HTML from '~/assets/html.png'\nimport CSSPhoto from '~/assets/skills/css.png'\nimport Javascript from '~/assets/skills/javascript.png'\nimport Typescript from '~/assets/skills/typescript.png'\nimport ReactPic from '~/assets/skills/react.png'\nimport Next from '~/assets/skills/nextjs.png'\nimport MaterialPic from '~/assets/skills/material-ui.png'\nimport Redux from '~/assets/skills/redux.png'\nimport Graphql from '~/assets/skills/graphql.png'\nimport Apollo from \"~/assets/skills/apollo.png\"\n\n\ntype IndexData = {\n  currentPosition: string;\n  location: string;\n  aboutMe: string;\n  skills: string[];\n};\n\nconst SKILLS = {\n  HTML: 'HTML',\n  CSS: 'CSS',\n  JAVASCRIPT: 'Javascript',\n  TYPESCRIPT: 'Typescript',\n  REACT_JS: 'ReactJS',\n  NEXT: 'Next',\n  MATERIAL_UI: 'Material UI',\n  REDUX: 'Redux',\n  GRAPHQL: 'GraphQL',\n  APOLLO: 'Apollo',\n}\n\nconst SKILL_ICONS = {\n  [SKILLS.HTML]: HTML,\n  [SKILLS.CSS]: CSSPhoto,\n  [SKILLS.JAVASCRIPT]: Javascript,\n  [SKILLS.TYPESCRIPT]: Typescript,\n  [SKILLS.REACT_JS]: ReactPic,\n  [SKILLS.NEXT]: Next,\n  [SKILLS.MATERIAL_UI]: MaterialPic,\n  [SKILLS.REDUX]: Redux,\n  [SKILLS.GRAPHQL]: Graphql,\n  [SKILLS.APOLLO]: Apollo,\n}\n\n// Loaders provide data to components and are only ever called on the server, so\n// you can connect to a database or run any server side code you want right next\n// to the component that renders it.\n// https://remix.run/api/conventions#loader\nexport const loader: LoaderFunction = () => {\n  const data: IndexData = {\n    currentPosition: 'frontend software engineer',\n    location: 'Florian\u00F3polis, Brasil',\n    aboutMe: \"I'm 25 years old with a bachelor's degree in Control and Automation Engineer from UFSC. In the last 3 years, I've been working as a Frontend Software Engineer and I can say that web development is my passion. Professional posture, team player, always seeking to learn more.\",\n    skills: Object.values(SKILLS)\n  };\n\n  // https://remix.run/api/remix#json\n  return json(data);\n};\n\n// https://remix.run/api/conventions#meta\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"Marina's Profile\",\n    description: \"Check out my new website\"\n  };\n};\n\n\n\n// https://remix.run/guides/routing#index-routes\nexport default function Index() {\n  const data = useLoaderData<IndexData>();\n\n  return (\n    <div>\n      <div className=\"first-section\">\n        <div className=\"first-text\">\n          <h1 className=\"title\">Hello, <br />I'm Marina</h1>\n          <h2 className=\"subtitle\">{data.currentPosition}</h2>\n          <div className=\"location\">\n            <img className=\"pin-icon\" src={Pin} aria-hidden=\"true\" />\n            <p className=\"location-text\">{data.location}</p>\n          </div>\n        </div>\n        <img className=\"photo\" src={First} aria-hidden=\"true\" />\n        <img className=\"photo-mobile\" src={FirstMobile} aria-hidden=\"true\" />\n      </div>\n      <div className=\"second-section\">\n        <img src={Second} className=\"second-photo\" aria-hidden=\"true\" />\n        <div>\n          <div className=\"second-header\">\n            <img src={SecondMobile} className=\"second-photo-mobile\" aria-hidden=\"true\" />\n            <h2 className=\"about-me\">about me</h2>\n          </div>\n          <p className=\"about-me-text\">{data.aboutMe}\n          </p>\n        </div>\n      </div>\n      <div className=\"third-section\">\n        <h2 className=\"skills\">\n          professional skills\n        </h2>\n        <div className=\"skills-container\">\n          {data.skills.map(skill => <div key={skill} className=\"skill\">\n            <img src={SKILL_ICONS[skill]} alt={`${skill} icon`} aria-hidden=\"true\" className=\"skill-icon\" />\n            <p className=\"skill-label\">{skill}</p>\n          </div>)}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],
  "mappings": "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",
  "names": []
}
